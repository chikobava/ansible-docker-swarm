version: "3.7"

services:
  setup:
    build:
      context: setup/
      dockerfile: Dockerfile
      args:
        - STACK_VERSION=${STACK_VERSION}
    volumes:
      - /mnt/nfs/docker/volumes/escerts:/usr/share/elasticsearch/config/certs
    user: "0"
    healthcheck:
      test: "[ -f config/certs/es01/es01.crt ]"
      interval: 1s
      timeout: 5s
      retries: 120
    deploy:
      replicas: 1
      restart_policy:
        condition: none
    networks:
      - esnet
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - /mnt/nfs/docker/volumes/escerts:/usr/share/elasticsearch/config/certs
      - /mnt/nfs/docker/volumes/esdata01:/usr/share/elasticsearch/data
    environment:
      node.name: es01
      cluster.name: ${CLUSTER_NAME}
      cluster.initial_master_nodes: es01,es02,es03
      discovery.seed_hosts: es02,es03
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "true"
      xpack.security.http.ssl.enabled: "true"
      xpack.security.http.ssl.key: certs/es01/es01.key
      xpack.security.http.ssl.certificate: certs/es01/es01.crt
      xpack.security.http.ssl.certificate_authorities: certs/ca/ca.crt
      xpack.security.transport.ssl.enabled: "true"
      xpack.security.transport.ssl.key: certs/es01/es01.key
      xpack.security.transport.ssl.certificate: certs/es01/es01.crt
      xpack.security.transport.ssl.certificate_authorities: certs/ca/ca.crt
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.license.self_generated.type: ${LICENSE}
    deploy:
      placement:
        constraints:
          - node.labels.es_node == 1
      resources:
        limits:
          memory: 2G
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'"
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - esnet

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - /mnt/nfs/docker/volumes/escerts:/usr/share/elasticsearch/config/certs
      - /mnt/nfs/docker/volumes/esdata02:/usr/share/elasticsearch/data
    environment:
      node.name: es02
      cluster.name: ${CLUSTER_NAME}
      cluster.initial_master_nodes: es01,es02,es03
      discovery.seed_hosts: es01,es03
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "true"
      xpack.security.http.ssl.enabled: "true"
      xpack.security.http.ssl.key: certs/es02/es02.key
      xpack.security.http.ssl.certificate: certs/es02/es02.crt
      xpack.security.http.ssl.certificate_authorities: certs/ca/ca.crt
      xpack.security.transport.ssl.enabled: "true"
      xpack.security.transport.ssl.key: certs/es02/es02.key
      xpack.security.transport.ssl.certificate: certs/es02/es02.crt
      xpack.security.transport.ssl.certificate_authorities: certs/ca/ca.crt
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.license.self_generated.type: ${LICENSE}
    deploy:
      placement:
        constraints:
          - node.labels.es_node == 2
      resources:
        limits:
          memory: 2G
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'"
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - esnet

  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - /mnt/nfs/docker/volumes/escerts:/usr/share/elasticsearch/config/certs
      - /mnt/nfs/docker/volumes/esdata03:/usr/share/elasticsearch/data
    environment:
      node.name: es03
      cluster.name: ${CLUSTER_NAME}
      cluster.initial_master_nodes: es01,es02,es03
      discovery.seed_hosts: es01,es02
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}

      bootstrap.memory_lock: "true"
      xpack.security.enabled: "true"
      xpack.security.http.ssl.enabled: "true"
      xpack.security.http.ssl.key: certs/es03/es03.key
      xpack.security.http.ssl.certificate: certs/es03/es03.crt
      xpack.security.http.ssl.certificate_authorities: certs/ca/ca.crt
      xpack.security.transport.ssl.enabled: "true"
      xpack.security.transport.ssl.key: certs/es03/es03.key
      xpack.security.transport.ssl.certificate: certs/es03/es03.crt
      xpack.security.transport.ssl.certificate_authorities: certs/ca/ca.crt
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.license.self_generated.type: ${LICENSE}
    deploy:
      placement:
        constraints:
          - node.labels.es_node == 3
      resources:
        limits:
          memory: 2G
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'"
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - esnet

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    volumes:
      - /mnt/nfs/docker/volumes/escerts:/usr/share/kibana/config/certs
      - /mnt/nfs/docker/volumes/kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      SERVERNAME: kibana
      ELASTICSEARCH_HOSTS: https://es01:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: ${KIBANA_PASSWORD}
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES: config/certs/ca/ca.crt
    deploy:
      resources:
        limits:
          memory: 2G
    healthcheck:
      test: "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'"
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - esnet

  haproxy:
    image: haproxy:latest
    volumes:
      - /mnt/nfs/docker/volumes/elastic_stack_haproxy:/usr/local/etc/haproxy
    ports:
      - 9200:9200
    networks:
      - esnet
networks:
  esnet:
    driver: overlay
    attachable: true
    name: esnet